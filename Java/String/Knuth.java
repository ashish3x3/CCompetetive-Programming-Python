/*Fisher Yates Shuffle
Implement the Fisher-Yates shuffle (a.k.a. the Knuth shuffle) for an integer array (or, if possible, an array of any type). The Knuth shuffle is used to create a random permutation of an array.

The Fisher-Yates shuffle is used to randomly permute given input (list). The permutations generated by this algorithm occur with the same probability.
Source: (Knuth.java)*/

import java.util.*;
 
public class Knuth {
 
  /**
   * Fisher-Yates algorithm with O(n) time complexity
   * Permutes the given array
   * @param array array to be shuffled
   */
  public static void knuth(int[] array) {
    Random r = new Random();
    for (int i = array.length - 1; i > 0; i--) {
      int index = r.nextInt(i);
      // swap 
      int tmp = array[index];
      array[index] = array[i];
      array[i] = tmp;
    }
  }
 
  public static void main(String[] args) {
 
    int [] array = {1,2,3,4,5,6,7,8,9,10,11,12}; 
    System.out.println("Before: " + Arrays.toString(array));
 
    knuth(array);
 
    System.out.println("After:  " + Arrays.toString(array));
 
  }
}
 
/*
Output:

$ java Knuth
Before: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
After:  [8, 11, 6, 7, 12, 9, 1, 5, 4, 2, 3, 10]

$ java Knuth
Before: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
After:  [8, 10, 12, 6, 1, 2, 3, 4, 5, 7, 9, 11]
*/
