
Matrix-chain Multiplication  Problem

 This general class of problem is important in complier design for code optimization and in databases for query optimization. 



Suppose that our problem is to multiply a chain of n matrices A1 A2 ... An. Recall (from your discrete structures course), matrix multiplication is an associative but not a commutative operation. 

This means that you are free to parenthesize the above multiplication however we like, but we are not free to rearrange the order of the matrices. Also, recall that when two (non-square) matrices are being multiplied, there are restrictions on the dimensions.


*****************************************************************

Commutative Laws:	a + b  =  b + a
					a × b  =  b × a
Associative Laws:	(a + b) + c  =  a + (b + c)
					(a × b) × c  =  a × (b × c)
Distributive Law:	a × (b + c)  =  a × b  +  a × c

associative operator, the order in which the operations are performed does not matter as long as the sequence of the operands is not changed. 
2+(3+4) = (2+3)+4
2*(3*4)

it can be said that "addition and multiplication of real numbers are associative operations
substraction,division and exponentian is not assocative (5-3)-2 != 5-(3-2)


commutativity, which addresses whether or not the order of two operands changes the result. For example, the order doesn't matter in the multiplication of real numbers, that is, a × b = b × a, so we say that the multiplication of real numbers is a commutative operation.


In contrast to the theoretical properties of real numbers, the addition of floating point numbers in computer science is not associative, and the choice of how to associate an expression can have a significant effect on rounding error.

12 / 3 = 4, but
3 / 12 = ¼
The Distributive Law does not work for division:

Example:

24 / (4 + 8) = 24 / 12 = 2, but
24 / 4 + 24 / 8 = 6 + 3 = 9

*****************************************************************


Suppose, matrix A has p rows and q columns i.e., the dimension of matrix A is p × q. You can multiply a matrix A of p × q dimensions times a matrix B of dimensions q × r, and the result will be a matrix C with dimensions p × r. That is, you can multiply two matrices if they are compatible: the number of columns of A must equal the number of rows of B.

In particular, for 1 ≤ i ≤  p and 1 ≤ j ≤ r, we have

C[i, j] = ∑1 ≤ k ≤ q A[i, k] B[k, j].

There are p . r total entries in C and each takes O(q) time to compute, thus the total time to multiply these two matrices is dominated by the number of scalar multiplication, which is p . q . r.




The Chain Matrix Multiplication Problem

Given a sequence of n matrices A1, A2, ... An, and their dimensions p0, p1, p2, ..., pn, where where i = 1, 2, ..., n, matrix Ai has dimension pi − 1 × pi, determine the order of multiplication that minimizes the the number of scalar multiplications.


highered.mheducation.com/sites/dl/free/0073383090/299355/Apps_Ch2.pdf


Basis: Observe that if i = j then the problem is trivial; the sequence contains only one matrix, and so the cost is 0. (In other words, there is nothing to multiply.) Thus,

m[i, i] = 0 for i = 1, 2, ..., n.

 

Step: If i ≠ j, then we are asking about the product of the subchain Ai..j and we take advantage of the structure of an optimal solution. We assume that the optimal parenthesization splits the product, Ai..j into for each value of k, 1 ≤  k ≤  n − 1 as Ai..k . Ak+1..j.




































































